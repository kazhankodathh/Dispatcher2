<Activity mc:Ignorable="sap sap2010" x:Class="LoansPQ_ExecLoginSteps" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Checks whether login is successfull or not" Name="out_isSuccessFullyLoggedIn" Type="OutArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Chrom handle to which login steps is performed" Name="out_ChromeHandle" Type="OutArgument(ui:Browser)" />
  </x:Members>
  <this:LoansPQ_ExecLoginSteps.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:LoansPQ_ExecLoginSteps.in_Config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1154,3942</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>LoansPQ_ExecLoginSteps_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Execute Login Steps" sap:VirtualizedContainerService.HintSize="1047,3877" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Check whether span element which contains error messages is being displayed in security quesions page" Default="False" Name="boolErrorInQuestionsPage" />
      <Variable x:TypeArguments="ss:SecureString" sap2010:Annotation.AnnotationText="Answer fetched for security question 1" Default="[Nothing]" Name="strAnswer1" />
      <Variable x:TypeArguments="ss:SecureString" sap2010:Annotation.AnnotationText="Answer fetched for security quesion 2" Default="[Nothing]" Name="strAnswer2" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Check whether span element which contains error messages is being displayed in security password promt page" Default="False" Name="boolErrorInPasswordPage" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="LoansPQ username" Default="[String.Empty]" Name="strUserName" />
      <Variable x:TypeArguments="ss:SecureString" sap2010:Annotation.AnnotationText="LoansPQ password" Default="[Nothing]" Name="strPassword" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Checks whether login page is loaded" Default="False" Name="boolLoginPageLoaded" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Checks whether security quesions page is loaded" Default="False" Name="boolQuestionPageLoaded" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Security quesion 1 extracted from LoansPQ security quesions page" Default="[String.Empty]" Name="strQuestion1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Security quesion 2 extracted from LoansPQ security quesions page" Default="[String.Empty]" Name="strQuestion2" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Checks whether password promt page is loaded" Default="False" Name="boolPasswordPromtPageLoaded" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Checks whether home page is loaded" Default="False" Name="boolHomePageLoaded" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Text extracted from span element which may contains any error messages" Default="[String.Empty]" Name="strErrorMsg" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1005,3785" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Sequence - Execute Login Steps" sap:VirtualizedContainerService.HintSize="967,3536" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - Start" sap:VirtualizedContainerService.HintSize="925,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start of - Execute Login Steps&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" BrowserType="Chrome" DisplayName="Open LoansPQ in Google Chrome" sap:VirtualizedContainerService.HintSize="925,3262" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" NewSession="True" Private="True" UiBrowser="[out_ChromeHandle]" Url="[in_Config(&quot;LoansPQURL&quot;).ToString()]">
            <ui:OpenBrowser.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do login steps" sap:VirtualizedContainerService.HintSize="891,3121" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="849,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                  <ui:UiElementExists DisplayName="Check whether login page loaded" Exists="[boolLoginPageLoaded]" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8f993212-a21c-43dc-a9e4-165a018a70ba" Selector="&lt;webctrl tag='FONT' aaname='Login:' /&gt;" TimeoutMS="[CInt(in_Config(&quot;PageLoadingTimeOut&quot;))]" WaitForReady="COMPLETE" />
                    </ui:UiElementExists.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:UiElementExists>
                  <If Condition="[boolLoginPageLoaded = False]" DisplayName="If login page not loaded raise system exception" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Throw DisplayName="Throw system exception - Login page not loaded" Exception="[new Exception(in_Config(&quot;LoginPage_NotLoaded&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_9" />
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:RetryScope DisplayName="Retry Scope - Get login username &amp; password" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[CInt(in_Config(&quot;InternalRetryNumber&quot;))]" RetryInterval="[new TimeSpan(0,0,CInt(in_Config(&quot;InternalRetryInterval&quot;)))]">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action - Get username &amp; password from asset" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;LoansPQLoginCredentials&quot;).ToString()]" DisplayName="Get login username &amp; password" FolderPath="[in_Config(&quot;OrchestratorCredentialAssetFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[strPassword]" Username="[strUserName]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetRobotCredential>
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:RetryScope>
                  <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Username" EmptyField="True" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="TypeInto_1" SimulateType="True" Text="[strUserName]">
                    <ui:TypeInto.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1120e6e6-9ce3-48c2-80d6-0b882d49c1bb" InformativeScreenshot="cb86715926d62fb056add31a9e3fe74d" Selector="&lt;webctrl tag='INPUT' type='text' name='ctl00$bc$LoginMain$txtLogin' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:TypeInto.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:TypeInto>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Login Button" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c1bcbbf6-6957-4399-b77d-4def59fa20da" InformativeScreenshot="2615928f612736d1952a62fc2febd047" Selector="&lt;webctrl tag='INPUT' type='submit' aaname='Login' name='ctl00$bc$LoginMain$btnLogin' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:UiElementExists DisplayName="Check whether security question page loaded" Exists="[boolQuestionPageLoaded]" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="97187792-e701-4ae9-aaee-a53355d9eff3" InformativeScreenshot="2d97102e1ca43bc704eb320f93cee3b4" Selector="&lt;webctrl id='ctl00_bc_MFLQuestions_RegisterComputer' tag='TABLE' /&gt;" TimeoutMS="[CInt(in_Config(&quot;PageLoadingTimeOut&quot;))]" WaitForReady="COMPLETE" />
                    </ui:UiElementExists.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:UiElementExists>
                  <If Condition="[boolQuestionPageLoaded = False]" DisplayName="If security question page not loaded raise system exception" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Throw DisplayName="Throw system exception - Security page not loaded" Exception="[new Exception(in_Config(&quot;SecurityQuestionPage_NotLoaded&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_10" />
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:GetFullText IgnoreHidden="{x:Null}" DisplayName="Get Question 1" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="GetFullText_1">
                    <ui:GetFullText.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7dca27c-d42d-4114-9d37-84f0781ffe52" InformativeScreenshot="33b05000a198252229536746957a46bb" Selector="&lt;webctrl id='ctl00_bc_MFLQuestions_Question1' tag='SPAN' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:GetFullText.Target>
                    <ui:GetFullText.Text>
                      <OutArgument x:TypeArguments="x:String">[strQuestion1]</OutArgument>
                    </ui:GetFullText.Text>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetFullText>
                  <ui:GetFullText IgnoreHidden="{x:Null}" DisplayName="Get Question 2" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="GetFullText_2">
                    <ui:GetFullText.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3b9e33e0-51a0-4273-a899-1bbc3d1d5cd9" InformativeScreenshot="64c8c8a6b012b568be7c943e87c2a5f2" Selector="&lt;webctrl id='ctl00_bc_MFLQuestions_Question2' tag='SPAN' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:GetFullText.Target>
                    <ui:GetFullText.Text>
                      <OutArgument x:TypeArguments="x:String">[strQuestion2]</OutArgument>
                    </ui:GetFullText.Text>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetFullText>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Fetch Answers" sap:VirtualizedContainerService.HintSize="849,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Utilities\LoansPQ\LoansPQ_FetchAnswers.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Question1">[strQuestion1]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Question2">[strQuestion2]</InArgument>
                      <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Answer1">[strAnswer1]</OutArgument>
                      <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Answer2">[strAnswer2]</OutArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Answer 1" EmptyField="True" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="TypeSecureText_1" SecureText="[strAnswer1]" SimulateType="True">
                    <ui:TypeSecureText.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="600ad8a9-56f4-4d20-b975-b0c54eb19c1d" Selector="&lt;webctrl tag='INPUT' type='password' id='ctl00_bc_MFLQuestions_Answer1' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:TypeSecureText.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:TypeSecureText>
                  <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Answer 2" EmptyField="True" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="TypeSecureText_2" SecureText="[strAnswer2]" SimulateType="True">
                    <ui:TypeSecureText.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="35c03c5c-080f-4699-9213-0e7af16be478" Selector="&lt;webctrl id='ctl00_bc_MFLQuestions_Answer2' tag='INPUT' type='password' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:TypeSecureText.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:TypeSecureText>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Continue" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dd34b3eb-5458-4f21-b5ac-4f3dc9c301fb" InformativeScreenshot="6cef030398e695c486baf7380985cac1" Selector="&lt;webctrl tag='INPUT' type='submit' id='ctl00_bc_MFLQuestions_btnContinue' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:UiElementExists DisplayName="Check whether password promt page loaded" Exists="[boolPasswordPromtPageLoaded]" sap:VirtualizedContainerService.HintSize="849,68" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="70565949-cd1f-4306-aae0-f3653a52e8db" Selector="&lt;webctrl id='ctl00_bc_MFLPasswordPrompt_divPwd' tag='DIV' /&gt;" TimeoutMS="[CInt(in_Config(&quot;PageLoadingTimeOut&quot;))]" WaitForReady="COMPLETE" />
                    </ui:UiElementExists.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:UiElementExists>
                  <If Condition="[boolPasswordPromtPageLoaded = False]" DisplayName="If incorrect answer warning is found raise business exception" sap:VirtualizedContainerService.HintSize="849,1134" sap2010:WorkflowViewState.IdRef="If_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Sequence - Checks for any error messages in security quesions page" sap:VirtualizedContainerService.HintSize="813,948" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message - Page not found" sap:VirtualizedContainerService.HintSize="771,51" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[in_Config(&quot;PasswordPage_NotLoaded&quot;).ToString()]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <ui:UiElementExists DisplayName="Check for any error message is being displayed in quesions page" Exists="[boolErrorInQuestionsPage]" sap:VirtualizedContainerService.HintSize="771,51" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b549c448-2485-47f8-ba12-9f8fd696c459" Selector="&lt;webctrl id='ctl00_bc_MFLQuestions_lblError' tag='SPAN' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:UiElementExists.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:UiElementExists>
                        <If Condition="[boolErrorInQuestionsPage = True]" DisplayName="If question page contain any error messages" sap:VirtualizedContainerService.HintSize="771,674" sap2010:WorkflowViewState.IdRef="If_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Sequence - read error message in security quesions page" sap:VirtualizedContainerService.HintSize="526,517" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Clear error message" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strErrorMsg]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Read error message in quesions page" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="GetValue_1">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0aab68b8-b062-427e-a95f-04a4170b3b24" Selector="&lt;webctrl id='ctl00_bc_MFLQuestions_lblError' tag='SPAN' /&gt;" WaitForReady="COMPLETE">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strErrorMsg]</OutArgument>
                                </ui:GetValue.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:GetValue>
                              <If Condition="[string.IsNullOrEmpty(strErrorMsg) = false AND strErrorMsg.ToLower().Trim().Contains(&quot;an invalid security answer has been entered&quot;)]" DisplayName="If incorrect answer message found raise business rule exception" sap:VirtualizedContainerService.HintSize="484,217" sap2010:WorkflowViewState.IdRef="If_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Throw DisplayName="Throw Business rule exception - Invalid answer" Exception="[new BusinessRuleException(in_Config(&quot;InvalidAnswer&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_11" />
                                </If.Then>
                                <If.Else>
                                  <Throw DisplayName="Throw system exception - password page not found" Exception="[new Exception(in_Config(&quot;PasswordPage_NotLoaded&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_12" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Throw DisplayName="Throw system exception - password page not found" Exception="[new Exception(in_Config(&quot;PasswordPage_NotLoaded&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_17" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                  </If>
                  <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Password" EmptyField="True" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="TypeSecureText_3" SecureText="[strPassword]" SimulateType="True">
                    <ui:TypeSecureText.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="54969992-bc4c-4396-9677-2d70386aabc9" Selector="&lt;webctrl tag='INPUT' type='password' id='ctl00_bc_MFLPasswordPrompt_Password' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:TypeSecureText.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:TypeSecureText>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Sign In" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a4760773-97a4-4f0a-a2c5-bf93b010e8dc" InformativeScreenshot="a841f3734871ffd9cf19d18f41d20e98" Selector="&lt;webctrl tag='INPUT' type='submit' id='ctl00_bc_MFLPasswordPrompt_btnSignIn' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:UiElementExists DisplayName="Check whether home page loaded" Exists="[boolHomePageLoaded]" sap:VirtualizedContainerService.HintSize="849,68" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d9fca6d3-b652-4670-b1f3-9c710a15c1fa" Selector="&lt;html app='chrome.exe' title='*' /&gt;&lt;webctrl id='ctl00_MainContent_lblWelcome' tag='SPAN' /&gt;" TimeoutMS="[CInt(in_Config(&quot;PageLoadingTimeOut&quot;))]" WaitForReady="COMPLETE" />
                    </ui:UiElementExists.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:UiElementExists>
                  <If Condition="[boolHomePageLoaded = False]" DisplayName="If password got mismatched raise business rule exception" sap:VirtualizedContainerService.HintSize="849,51" sap2010:WorkflowViewState.IdRef="If_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Sequence - Checks for any error messages in password promt page" sap:VirtualizedContainerService.HintSize="814,853.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message - Page not found" sap:VirtualizedContainerService.HintSize="772,22" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[in_Config(&quot;HomePage_NotLoaded&quot;).ToString()]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <ui:UiElementExists DisplayName="Check for any error message is being displayed in password page" Exists="[boolErrorInPasswordPage]" sap:VirtualizedContainerService.HintSize="772,22" sap2010:WorkflowViewState.IdRef="UiElementExists_6">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4e796d33-cfc2-4566-8aea-ed650327762b" Selector="&lt;webctrl id='ctl00_bc_MFLPasswordPrompt_lblError' tag='SPAN' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:UiElementExists.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:UiElementExists>
                        <If Condition="[boolErrorInPasswordPage = True]" DisplayName="If password page contain any error messages" sap:VirtualizedContainerService.HintSize="772,637.333333333333" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Sequence - Read error message in password promt page" sap:VirtualizedContainerService.HintSize="526,476.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Clear error message" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strErrorMsg]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Read error message in password page" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="GetValue_2">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0aab68b8-b062-427e-a95f-04a4170b3b24" Selector="&lt;webctrl id='ctl00_bc_MFLPasswordPrompt_lblError' tag='SPAN' /&gt;" WaitForReady="COMPLETE">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strErrorMsg]</OutArgument>
                                </ui:GetValue.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:GetValue>
                              <If Condition="[string.IsNullOrEmpty(strErrorMsg) = false AND strErrorMsg.ToLower().Trim().Contains(&quot;an invalid login or password has been entered&quot;)]" DisplayName="If incorrect password message found raise business rule exception" sap:VirtualizedContainerService.HintSize="484,220.666666666667" sap2010:WorkflowViewState.IdRef="If_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Throw DisplayName="Throw Business rule exception - Invalid password" Exception="[new BusinessRuleException(in_Config(&quot;InvalidPassword&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_15" />
                                </If.Then>
                                <If.Else>
                                  <Throw DisplayName="Throw system exception - home page not found" Exception="[New Exception(in_Config(&quot;HomePage_NotLoaded&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_16" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Throw DisplayName="Throw system exception - home page not found" Exception="[New Exception(in_Config(&quot;HomePage_NotLoaded&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_14" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign DisplayName="Assign - Success flag" sap:VirtualizedContainerService.HintSize="849,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[out_isSuccessFullyLoggedIn]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:OpenBrowser.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:OpenBrowser>
          <ui:LogMessage DisplayName="Log Message - End" sap:VirtualizedContainerService.HintSize="925,51" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;End of - Execute Login Steps&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="971,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Raise system exception" sap:VirtualizedContainerService.HintSize="376,277" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - System exception" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;System exception at Execute Login Steps: &quot; + exception.Message + &quot; at Source: &quot; + exception.Source + &quot; Stack trace: &quot; + exception.StackTrace]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="971,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Raise business exception" sap:VirtualizedContainerService.HintSize="376,277" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - Business exception" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;Business exception at Execute Login Steps: &quot; + exception.Message + &quot; at Source: &quot; + exception.Source + &quot; Stack trace: &quot; + exception.StackTrace]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>